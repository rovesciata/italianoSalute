//
//  ViewController.swift
//  italianoSalute
//

import UIKit
import AVFoundation

class ViewController: UIViewController, AVSpeechSynthesizerDelegate {
    @IBOutlet weak var italian: UILabel!
    @IBOutlet weak var japanese: UILabel!
    @IBOutlet weak var button: UIButton!
    
    // 50ÂõûÁ∑¥Áøí(ÂÖàÁîü„Çø„ÉÉ„Éó)„Åó„Åü„Çâ„Éî„Ç∂„Éú„Çø„É≥Áô∫Áîü„ÅÆ„Ç´„Ç¶„É≥„ÉàÊï∞
    var count = 0
    
    var addBtn = UIButton()
//    let addBtn = UIButton(frame: CGRect(x: self.view.bounds.width - 70, y: self.view.bounds.height - 150, width: 55, height:55))

    @IBAction func buttonTapped(sender: UIButton) {
        let speechSynthesizer = AVSpeechSynthesizer()
        speechSynthesizer.delegate = self
        
        var speakingText = ""
        
        count += 1
        
        let rand = arc4random() % 14
        switch rand {
        case 0:
            speakingText = "Un cappuccino, per favore."
            italian.text = "Un cappuccino, per favore.\n\n„Ç¶„É≥ „Ç´„Éó„ÉÅ„Éº„Éé„ÄÅ„Éö„É´„Éï„Ç°„Éú„Éº„É¨"
            japanese.text = "„Ç´„Éó„ÉÅ„Éº„Éé„ÇíÔºë„Å§„Åè„Å†„Åï„ÅÑ„ÄÇ"
        case 1:
            speakingText = "Grazie."
            italian.text = "Grazie.\n\n„Ç∞„É©„ÉÉ„ÉÑ„Çß"
            japanese.text = "„ÅÇ„Çä„Åå„Å®„ÅÜ"
            
        case 2:
            speakingText = "Da dove vieni?"
            italian.text = "Da dove vieni?\n\n„ÉÄ „Éâ„É¥„Çß „É¥„Ç£„Ç®„Éº„Éã?"
            japanese.text = "Âá∫Ë∫´„ÅØ„Å©„Å°„Çâ„Åß„Åô„ÅãÔºü"
            
        case 3:
            speakingText = "Piacere. Mi chiamo Maria. Ho 20anni. Sono di Firenze."
            italian.text = "Piacere. Mi chiamo Maria. Ho 20anni. Sono di Firenze."
            japanese.text = "„ÅØ„Åò„ÇÅ„Åæ„Åó„Å¶„ÄÇÁßÅ„ÅÆÂêçÂâç„ÅØ„Éû„É™„Ç¢„Åß„Åô„ÄÇ\n\n20Ê≠≥„Åß„ÄÅ„Éï„Ç£„É¨„É≥„ÉÑ„ÇßÂá∫Ë∫´„Åß„Åô„ÄÇ"
            
        case 4:
            speakingText = "Come stai?"
            italian.text = "Come stai?\n\n„Ç≥„É° „Çπ„Çø„Éº„Ç§?"
            japanese.text = "„ÅäÂÖÉÊ∞ó„Åß„Åô„ÅãÔºü"
            
            
        case 5:
            speakingText = "Piacere."
            italian.text = "Piacere.\n\n„Éî„Ç¢„ÉÅ„Çß„Éº„É¨?"
            japanese.text = "„ÅØ„Åò„ÇÅ„Åæ„Åó„Å¶„ÄÇ"
            
        case 6:
            speakingText = "Prego."
            italian.text = "Prego.\n\n„Éó„É¨„Éº„Ç¥"
            japanese.text = "1.„Å©„ÅÜ„ÅÑ„Åü„Åó„Åæ„Åó„Å¶„ÄÇ2.„Å©„ÅÜ„Åû„ÄÇ"
            
        case 7:
            speakingText = "Mi chiamo Makoto"
            italian.text = "Mi chiamo Makoto.\n\n„Éü„Ç≠„Ç¢„Éº„É¢ „Éû„Ç≥„Éà"
            japanese.text = "ÁßÅ„ÅÆÂêçÂâç„ÅØ„Éû„Ç≥„Éà„Åß„Åô„ÄÇ"
            
        case 8:
            speakingText = "Prego."
            italian.text = "Prego.\n\n„Éó„É¨„Éº„Ç¥"
            japanese.text = "1.„Å©„ÅÜ„ÅÑ„Åü„Åó„Åæ„Åó„Å¶„ÄÇ2.„Å©„ÅÜ„Åû„ÄÇ"
            
        case 9:
            speakingText = "Sono giapponese."
            italian.text = "Sono giapponese.\n\n„ÇΩ„Éé „Ç∏„É£„Éù„Éç„Éº„Çº"
            japanese.text = "ÁßÅ„ÅØÊó•Êú¨‰∫∫„Åß„Åô„ÄÇ"
            
            
        case 10:
            speakingText = "Sto bene, grazie. E tu?"
            italian.text = "Sto bene, grazie. E tu?\n\n„Çπ„Éà„ÄÄ„Éô„Éº„Éç„ÄÅ„Ç∞„É©„ÉÉ„ÉÑ„Çß„ÄÇ„Ç®„ÄÄ„Éà„Ç•?"
            japanese.text = "ÁßÅ„ÅØÂÖÉÊ∞ó„Åß„Åô„ÄÅ„ÅÇ„Çä„Åå„Å®„ÅÜ„ÄÇ„ÅÇ„Å™„Åü„ÅØÔºü"
            
        case 11:
            speakingText = "Scusi."
            italian.text = "Scusi.\n\n„Çπ„ÇØ„Éº„Ç∏"
            japanese.text = "„Åô„ÅÑ„Åæ„Åõ„Çì„ÄÇ"
            
        case 12:
            speakingText = "Come?"
            italian.text = "Come?\n\n„Ç≥„Éº„É°?"
            japanese.text = "‰Ωï„Åß„Åô„ÅãÔºü(ËÅû„ÅçËøî„ÅôÊôÇ)"
            
            
        default:
            speakingText = "Buongiorno"
            italian.text = "Buongiorno.\n\n„Éú„É≥„Ç∏„Éß„É´„Éé"
            japanese.text = "„Åä„ÅØ„Çà„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åô„ÄÇ"
        }
        
        let utterrance = AVSpeechUtterance(string: speakingText)
        utterrance.voice = AVSpeechSynthesisVoice(language: "it-IT")
        utterrance.volume = 1.0
        speechSynthesizer.speak(utterrance)
        
//        giapponese.isHidden = true
        
        italian.transform = CGAffineTransform(translationX: 0, y: -300)
        UIView.animate(withDuration: 0.5) {
            self.italian.transform = CGAffineTransform.identity
        }
        // 50ÂõûÁ∑¥Áøí„Åó„Åü„Çâ„Éî„Ç∂„Éú„Çø„É≥„ÅåË°®Á§∫
        if count >= 50 {
            addBtn.isHidden = false
        }
    }
    
    func speechSynthesizer(_ synthesizer: AVSpeechSynthesizer, didFinish utterance: AVSpeechUtterance) {
        button.isHidden = false

    }
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        // ÁîªÈù¢ÈÅ∑Áßª„Éú„Çø„É≥
        addBtn.frame = CGRect(x: self.view.bounds.width - 70, y: self.view.bounds.height - 120, width: 55, height:55)
        addBtn.isHidden = true
        addBtn.setTitle("üçï", for: UIControlState())
        addBtn.titleLabel!.font = UIFont(name: "Helvetica", size: 30)
        addBtn.setTitleColor(.white, for: UIControlState())
        addBtn.backgroundColor = .red
        addBtn.layer.cornerRadius = addBtn.frame.height/2
        addBtn.addTarget(self, action: #selector(onClick(_:)), for: .touchUpInside)
        self.view.addSubview(addBtn)
        addBtn.layer.shadowOpacity = 0.5
        addBtn.layer.shadowOffset = CGSize(width: 0, height: 5)
    
        
    }
    
    // „Éî„Ç∂„Éú„Çø„É≥„ÅÆÂá¶ÁêÜ
    @objc func onClick(_: UIButton) {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        let SecondController = storyboard.instantiateViewController(withIdentifier: "Insert")
        present(SecondController, animated: true, completion: nil)
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }


}

